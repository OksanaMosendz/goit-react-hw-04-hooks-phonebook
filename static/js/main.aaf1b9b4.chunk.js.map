{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App.jsx","index.js"],"names":["Form","styled","form","Label","label","ContactForm","onSubmit","useState","name","setName","number","setNumber","e","preventDefault","type","value","onChange","target","pattern","title","required","propTypes","PropTypes","func","isRequired","Filter","onChangeFilter","filter","Button","button","Li","li","P","p","ContactList","contacts","onClickDelete","filteredContacts","contact","toLowerCase","includes","length","map","id","onClick","App","setContacts","setFilter","useEffect","parseLocalContacts","JSON","parse","localStorage","getItem","window","setItem","stringify","some","alert","uuidv4","updatedContacts","forEach","index","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaf1b9b4.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px black solid;\r\n  padding: 30px;\r\n  width: 300px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  flex-direction: column;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Label } from './ContactForm.styled';\r\n\r\nexport const ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const HandleNameInput = e => setName(e.target.value);\r\n  const HandleNumberInput = e => setNumber(e.target.value);\r\n\r\n  const FormSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={FormSubmit}>\r\n      <Label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={HandleNameInput}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </Label>\r\n\r\n      <Label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={HandleNumberInput}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </Label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Label = styled.label`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  width: 300px;\r\n  padding-left: 30px;\r\n  padding-right: 30px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Label } from './Filter.styled';\r\n\r\nexport const Filter = ({ onChangeFilter, filter }) => {\r\n  return (\r\n    <Label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChangeFilter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </Label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\nexport const Button = styled.button`\r\n  margin-left: 10px;\r\n  height: 30px;\r\n  display: inline-block;\r\n`;\r\n\r\nexport const Li = styled.li`\r\n  align-items: center;\r\n  list-style-type: circle;\r\n  list-style-color: black;\r\n`;\r\n\r\nexport const P = styled.p`\r\n  display: inline-block;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Button, Li, P } from './ContactList.styled';\r\n\r\nexport const ContactList = ({ contacts, filter, onClickDelete }) => {\r\n  const filteredContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  return (\r\n    filteredContacts.length > 0 && (\r\n      <ul>\r\n        {filteredContacts.map(contact => (\r\n          <Li key={contact.id}>\r\n            <P>\r\n              {contact.name}:{contact.number}\r\n            </P>\r\n            <Button id={contact.id} type=\"button\" onClick={onClickDelete}>\r\n              Delete\r\n            </Button>\r\n          </Li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onClickDelete: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ContactForm } from './ContactForm/ContactForm';\r\nimport { Filter } from './Filter/Filter';\r\nimport { ContactList } from './ContactList/ContactList';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const App = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const parseLocalContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (parseLocalContacts) {\r\n      setContacts(parseLocalContacts);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const HandleSearchContactByName = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const HandleFormSubmit = (name, number) => {\r\n    const isInList = contacts.some(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    isInList\r\n      ? alert(name + ' is already in contacts.')\r\n      : setContacts([\r\n          ...contacts,\r\n          { name: name, id: uuidv4(), number: number },\r\n        ]);\r\n  };\r\n\r\n  const HandleClickDelete = e => {\r\n    const updatedContacts = [];\r\n    contacts.forEach(\r\n      (contact, index) =>\r\n        contact.id !== e.target.id && updatedContacts.push(contact),\r\n    );\r\n    setContacts(updatedContacts);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={HandleFormSubmit} />\r\n      <h2>Contacts</h2>\r\n      <Filter onChangeFilter={HandleSearchContactByName} filter={filter} />\r\n      <ContactList\r\n        filter={filter}\r\n        contacts={contacts}\r\n        onClickDelete={HandleClickDelete}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}